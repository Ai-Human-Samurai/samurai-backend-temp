from random import choice

# üü° –ù–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã, –Ω–æ –ø–æ–ª–µ–∑–Ω—ã)
FLOOD_WARNING_TITLES = {
    "flood_warn_1": "–ü–µ—Ä–≤–∞—è –º—è–≥–∫–∞—è —Ñ—Ä–∞–∑–∞",
    "flood_warn_repeat": "–§—Ä–∞–∑–∞ –ø—Ä–∏ –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–µ–º—Å—è —Ñ–ª—É–¥–µ",
}

# üî¥ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—Ä–∞–∑—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
FLOOD_WARNINGS = {
    "flood_warn_1": [
        "–Ø —Ä—è–¥–æ–º. –ù–µ –∑–∞–±—É–¥—å, –∑–∞—á–µ–º —Ç—ã –∑–¥–µ—Å—å.",
        "–í—Å–ø–æ–º–Ω–∏ —Ü–µ–ª—å. –î–µ—Ä–∂–∏ –Ω–∏—Ç—å.",
        "–Ø —Å–ª—É—à–∞—é. –ù–æ –Ω–µ –≥–æ–≤–æ—Ä—é –≤–ø—É—Å—Ç—É—é.",
        "–í–µ—Ä–Ω—ë–º—Å—è –∫ –≤–∞–∂–Ω–æ–º—É. –ö–æ—Ä–æ—Ç–∫–æ.",
        "–®—É–º ‚Äî –ª–µ–≥–∫–æ. –°—É—Ç—å ‚Äî –≤—ã–±–æ—Ä.",
    ],
    "flood_warn_repeat": [
        "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–º—ã—Å–ª ‚Äî –æ—Ç–≤–µ—á—É.",
        "–¢–∏—à–∏–Ω–∞ ‚Äî —Ç–æ–∂–µ –æ—Ç–≤–µ—Ç.",
        "–Ø –æ—Ç–≤–µ—á–∞—é –Ω–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ, –Ω–µ –Ω–∞ —à—É–º.",
        "–ö –¥–µ–ª—É ‚Äî –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–º.",
        "–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è. –Ø –∑–¥–µ—Å—å.",
    ],
}

# üü¢ –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ —Ñ—Ä–∞–∑—ã (–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –∏ —Ç.–ø.)
FLOOD_WHITELIST = {
    "–ø—Ä–∏–≤–µ—Ç",
    "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π",
    "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ",
    "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä",
    "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å",
    "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é",
}

# üî¥ "–ü—É—Å—Ç—ã–µ" —Ñ—Ä–∞–∑—ã, —Å—á–∏—Ç–∞—é—â–∏–µ—Å—è –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º–∏
FLOOD_BORING = {
    "–æ–∫",
    "–æ–∫–µ–π",
    "—É–≥—É",
    "—è—Å–Ω–æ",
    "–ø–æ–Ω—è—Ç–Ω–æ",
    "–¥–∞",
    "–Ω–µ—Ç",
    "—Å–ø—Å",
    "–∞–≥–∞",
    "–ª–æ–ª",
    "–º–º",
    "–º–¥–∞",
    "—ç—Ö",
    "—è—Å–Ω",
    "–∫",
    ".",
    "..",
    "...",
    "?",
    "?!",
}

# ‚úÖ –î–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã (GPT-–ø—Ä–æ–≤–µ—Ä–∫–∞, fallback –∏ —Ç.–ø.)
PROMPT = {
    "FLOOD_CHECK_PROMPT": (
        "–ü—Ä–æ–≤–µ—Ä—å, –ø–æ—Ö–æ–∂–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è —Ñ—Ä–∞–∑–∞ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –ø–æ —Å–º—ã—Å–ª—É –∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ.\n\n"
        "–ï—Å–ª–∏ –ø–æ—á—Ç–∏ –∏–¥–µ–Ω—Ç–∏—á–Ω–∞ ‚Äî –æ—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ: TRUE\n"
        "–ï—Å–ª–∏ –Ω–æ–≤–∞—è –ø–æ —Å–º—ã—Å–ª—É ‚Äî –æ—Ç–≤–µ—Ç—å —Å—Ç—Ä–æ–≥–æ: FALSE\n\n"
        "–§—Ä–∞–∑–∞: '{text}'\n\n"
        "–û—Ç–≤–µ—Ç: TRUE –∏–ª–∏ FALSE"
    ),
    "FLOOD_FEEDBACK": [
        "–ö–æ–≥–¥–∞ –±—É–¥–µ—Ç —Å–º—ã—Å–ª ‚Äî –æ—Ç–≤–µ—á—É.",
        "–Ø –æ—Ç–≤–µ—á–∞—é –Ω–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–µ, –Ω–µ –Ω–∞ —à—É–º.",
        "–¢–∏—à–∏–Ω–∞ ‚Äî –º–æ–π —Ñ–∏–ª—å—Ç—Ä.",
    ],
}


def _normalize(text: str) -> str:
    """
    –ü—Ä–∏–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ —É–±–∏—Ä–∞–µ—Ç –∫—Ä–∞–π–Ω–∏–µ –∑–Ω–∞–∫–∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏/–ø—Ä–æ–±–µ–ª—ã,
    —á—Ç–æ–±—ã whitelist/boring –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏ –Ω–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö –≤—Ä–æ–¥–µ '–ü—Ä–∏–≤–µ—Ç!'/'–æ–∫...'.
    """
    if not isinstance(text, str):
        return ""
    return text.strip().lower().strip(" .,!?:;‚Ä¶‚Äî-()[]{}\"'")

def get_flood_phrase(key: str) -> str | None:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ñ—Ä–∞–∑—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ –∫–ª—é—á—É.
    """
    return choice(FLOOD_WARNINGS.get(key, [])) if key in FLOOD_WARNINGS else None

def is_whitelist(text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –¥–æ–ø—É—Å—Ç–∏–º—ã–º –∫–æ—Ä–æ—Ç–∫–∏–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º).
    """
    return _normalize(text) in FLOOD_WHITELIST

def is_boring(text: str) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ—Ä–∞–∑–∞ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω–æ–π (–¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ–ª—É–¥–∞).
    """
    return _normalize(text) in FLOOD_BORING