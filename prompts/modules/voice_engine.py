import random
from modules.voice_module import (
    generate_and_save_voice,
    save_mp3_file,
    style_to_voice,
    is_text_blocked,
)
from modules.voice_cache import (
    get_voice_cache_path,
    is_voice_cached,
)
from prompts import load_prompts


def play_or_generate_voice(
    user_id: int,
    key: str = None,
    lang: str = "ru",
    style: str = "–¥—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π",
    text: str = None,
    db=None,
) -> dict:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—É—é —Ñ—Ä–∞–∑—É –ø–æ –∫–ª—é—á—É –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É.
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫—ç—à, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        {
            "text": "—Å–∞–º–∞ —Ñ—Ä–∞–∑–∞",
            "path": "–ø—É—Ç—å –∫ mp3 –∏–ª–∏ None"
        }
    """
    prompts = load_prompts(lang)
    phrase = None

    # üß† 1. –í—ã–±–æ—Ä —Ñ—Ä–∞–∑—ã
    if key:
        phrase_list = prompts.get(key, [])
        phrase = random.choice(phrase_list) if isinstance(phrase_list, list) else phrase_list
    elif text:
        phrase = text.strip()
    else:
        return {"text": None, "path": None}

    # üö´ 2. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è (—Ç–æ–∫—Å–∏—á–Ω–æ—Å—Ç—å, —Ñ–ª–∞–¥ –∏ –ø—Ä.)
    if is_text_blocked(user_id=user_id, text=phrase, lang=lang, db=db):
        return {"text": None, "path": None}

    # üîä 3. –ö—ç—à
    voice = style_to_voice(style, lang)
    cache_path = get_voice_cache_path(text=phrase, lang=lang, voice=voice)

    if is_voice_cached(text=phrase, lang=lang, voice=voice):
        return {"text": phrase, "path": cache_path}

    # üé§ 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è
    try:
        generate_and_save_voice(
            text=phrase,
            user_id=user_id,
            voice=voice,
            lang=lang,
        )
        return {"text": phrase, "path": cache_path}
    except Exception:
        return {"text": phrase, "path": None}